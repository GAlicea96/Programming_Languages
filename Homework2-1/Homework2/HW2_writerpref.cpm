/*Guillermo Alicea
**Homework 2 - Monitors (writer preferred)
**06/17/15
*/
binarysem output;
monitor readersWriters
{
	int writercount = 0;
	int busy = 0;
	condition oktoread, oktowrite;

	//writercount replaces readercount to provide, practically, the reverse
	//of a reader preferred algorithm
	void startread()
	{
		if ((busy == 1) || (writercount != 0))
			waitc(oktoread);
		busy = 1;
	}
	void endread()
	{
		busy = 0;
		if (!empty(oktowrite))
			signalc(oktowrite);
		else
			signalc(oktoread);
	}	
	void startwrite()
	{
		if (busy == 1)
			waitc(oktowrite);
		writercount = writercount + 1;
		signalc(oktowrite);
	}
	void endwrite()
	{	
		writercount = writercount - 1;
		if (writercount == 0)
			signalc(oktoread); 
	}
}
void reader(int i)
{
	int count = 0;
	while (1)
	{
		startread();
		p(output);
		cout << "Reader " << i <<  " enters the critical section" << endl;
		v(output);
		count = count + 1;
		endread();
		p(output);
		cout << "Reader " << i << " leaves the critical section" << endl;
		v(output);
		if (count == 6)
			break;
	}
}
void writer(int i)
{
	int count = 0;
	while (1)
	{
		startwrite();
		p(output);
		cout << "Writer " << i << " enters the critical section" << endl;
		v(output);
		count = count + 1;
		endwrite();
		p(output);
		cout << "Writer " << i << " leaves the critical section" << endl;
		v(output);
		if (count == 3)
			break;
	}
}
main()
{
	initialsem(output, 1);
	cobegin
	{
		reader(1);
		reader(2);
		reader(3);
		reader(4);
		reader(5);
		reader(6);
		writer(1);
		writer(2);
		writer(3);	
		writer(4);
	}
}